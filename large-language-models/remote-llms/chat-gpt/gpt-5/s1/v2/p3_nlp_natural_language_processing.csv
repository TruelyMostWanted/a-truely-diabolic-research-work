Keyword,Category,Description,RelevantScrumEntities
Requirement Extraction,Text Mining,"Identify functional and non-functional requirements from user stories, meeting notes, or emails using entity recognition and keyword extraction.",Product Backlog, User Stories
Intent Classification,Classification,"Categorize requirements by intent, such as features, enhancements, or bug fixes, using NLP classification models.",Product Backlog Items, Sprint Backlog
Requirement Clustering,Clustering,"Group similar requirements together to avoid duplication and detect overlaps.",Product Backlog, Epics
Complexity Estimation,Semantic Analysis,"Use NLP to estimate complexity by analyzing technical terms, dependencies, and conditional logic in requirement descriptions.",Product Backlog Items, Estimation Sessions
Dependency Detection,Relation Extraction,"Identify dependencies between requirements or user stories from textual descriptions.",Product Backlog, Sprint Planning
Ambiguity Detection,Quality Analysis,"Detect vague or ambiguous language in requirements to improve clarity and reduce implementation risk.",User Stories, Definition of Ready
Priority Scoring,Sentiment & Importance Analysis,"Rank requirements by urgency or stakeholder emphasis based on meeting transcripts or comments.",Product Backlog, Release Planning
Stakeholder Mapping,Entity Linking,"Identify stakeholders and their concerns from requirements documents to track accountability.",Sprint Review Notes, Stakeholder List
Change Impact Analysis,Comparative Text Analysis,"Analyze changes in requirements over sprints to assess their impact on development scope and timelines.",Product Backlog, Release Plan
Acceptance Criteria Validation,Rule-based NLP,"Check whether acceptance criteria are present and measurable using NLP rule matching.",User Stories, Definition of Done
