Keyword,Category,Description,RelevantScrumEntities
"Named Entity Recognition (NER)","Requirement Extraction","Automatically identifies and extracts key entities from text, such as user roles (e.g., 'Admin'), actions ('delete post'), business objects ('user profile'), and non-functional requirements ('securely').","Product Backlog Item (PBI), User Story, Acceptance Criteria, Sprint Review Feedback"
"Semantic Similarity","Requirement Structuring","Uses vector embeddings to measure how similar two pieces of text are. This is extremely effective for identifying duplicate or overlapping user stories in the backlog, even if they are worded differently.","Product Backlog, Backlog Refinement"
"Ambiguity Detection","Complexity & Quality Analysis","Scans requirements for vague or weak words (e.g., 'support', 'manage', 'fast', 'easy to use') that can lead to misinterpretation. Helps enforce quality criteria like the INVEST model for user stories.","PBI, User Story, Acceptance Criteria, Definition of Done"
"Complexity Metrics","Complexity & Quality Analysis","Estimates the complexity of a requirement by analyzing linguistic features. This can include counting verbs/actions, analyzing sentence structure (syntactic parsing), or using readability scores. This provides an objective input for story point estimation.","PBI, Sprint Planning, Backlog Refinement"
"Topic Modeling","Requirement Structuring","Analyzes a large set of requirements or feedback comments to automatically discover and group them into underlying themes or epics (e.g., 'Payment Processing', 'User Authentication').","Product Backlog, Product Roadmap, Sprint Review Feedback"
"Sentiment Analysis","Feedback Analysis","Automatically determines the emotional tone (positive, negative, neutral) of stakeholder feedback from Sprint Reviews, user-submitted bug reports, or app store reviews. Helps Product Owners prioritize pain points.","Sprint Review, Monitoring & Feedback Collection"
"Relation Extraction","Requirement Extraction","Identifies the relationships between extracted entities. For example, in 'Admin can reset a user's password', it identifies that 'Admin' is the agent, 'reset' is the action, and 'password' is the object, creating a structured model.","PBI, Acceptance Criteria"
"Text Classification","Requirement Structuring","Automatically categorizes incoming text into predefined buckets. For example, it can classify user feedback as a 'Bug Report', 'Feature Request', or 'Question', streamlining the process of adding it to the backlog.","Product Backlog, Monitoring & Feedback Collection"
"Requirement Tracing","Process Automation","Creates links between different artifacts by analyzing text similarity. It can link a user story to its corresponding technical documentation, test cases, or even code commits that mention it.","PBI, Definition of Done, CI/CD Pipeline"
"Text Summarization","Feedback Analysis","Condenses long documents or transcripts (e.g., from user interviews or lengthy stakeholder feedback sessions) into concise summaries, allowing the Product Owner and team to quickly grasp the key points.","Project Vision & Goal Setting, Sprint Review"