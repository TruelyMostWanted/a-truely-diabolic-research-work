Keyword,Category,Description,"RelevantScrumEntities"
Named Entity Recognition (NER),Requirement Extraction,"Automatically identifies and classifies key entities like actors ('user', 'admin'), system components ('database', 'API'), and data objects ('invoice', 'profile picture') from raw text.","User Story, Product Backlog Item (PBI), Bug Reports"
Intent Classification,Requirement Extraction,"Determines the primary action or goal of a requirement, such as 'create', 'update', 'view', 'calculate', or 'delete'. This helps in standardizing requirement definitions.","User Story, Acceptance Criteria"
Sentiment Analysis,Requirement Extraction,"Gauges the sentiment (positive, negative, neutral) from stakeholder feedback, app reviews, or bug reports to help the Product Owner prioritize user pain points and highly-requested features.","Sprint Review Feedback, Bug Reports"
Semantic Similarity,Requirement Structuring,"Compares user stories or PBIs to identify duplicates or closely related items in the backlog. This helps prevent redundant work and can highlight dependencies.","Product Backlog, User Story"
Topic Modeling,Requirement Structuring,"Scans the entire backlog to discover latent topics or feature groups. This can help the Product Owner in identifying and organizing items into epics or themes.","Product Backlog"
Requirements Classification,Requirement Structuring,"Automatically categorizes requirements into types such as functional, non-functional (e.g., security, performance, usability), or technical debt based on keywords and sentence structure.","PBI, Acceptance Criteria, Definition of Done"
Ambiguity Detection,Quality & Complexity Evaluation,"Flags vague, subjective, or ambiguous terms (e.g., 'fast', 'easy to use', 'etc.', 'support for', 'robust') that could lead to misinterpretation and need clarification.","User Story, Acceptance Criteria, Definition of Done"
Readability Scores (e.g., Flesch-Kincaid),Quality & Complexity Evaluation,"Measures the linguistic complexity of user stories and acceptance criteria. A very low score (indicating complex language) suggests the PBI is poorly understood and needs refinement.","User Story, Acceptance Criteria"
Logical Operator Analysis,Quality & Complexity Evaluation,"Counts and analyzes logical conditions (IF, AND, OR, NOT, EXCEPT) within acceptance criteria. A high number of conditions is a strong indicator of high cognitive and implementation complexity.","Acceptance Criteria"
Gherkin Syntax Validation,Quality & Complexity Evaluation,"Parses acceptance criteria to check if they conform to the structured GIVEN-WHEN-THEN format. This improves clarity, reduces ambiguity, and enables automated test generation.","Acceptance Criteria"
Dependency Identification,Requirement Structuring,"Analyzes the text of multiple stories to infer potential dependencies, for example, if one story mentions an entity created or modified by another story.","Product Backlog, User Story"
Acronym and Jargon Detection,Quality & Complexity Evaluation,"Identifies project-specific acronyms or technical jargon that may not be understood by all team members or stakeholders, flagging them for definition in a glossary.","User Story, PBI, Acceptance Criteria"