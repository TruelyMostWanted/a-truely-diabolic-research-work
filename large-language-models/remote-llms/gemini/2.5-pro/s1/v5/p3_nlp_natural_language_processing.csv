Keyword,Category,Description,RelevantScrumEntities
"Named Entity Recognition (NER)","Extraction","Automatically identifies key actors, objects, and business terms (e.g., 'user', 'shopping cart', 'payment gateway') from raw text like emails or interview notes.","Product Backlog, User Stories"
"Intent Classification","Extraction","Categorizes unstructured user feedback (e.g., from support tickets) into types like 'Bug Report', 'Feature Request', or 'Question' to help the PO process it efficiently.","Product Backlog"
"Relation Extraction","Extraction","Identifies dependencies and relationships between entities (e.g., 'User must log in BEFORE accessing dashboard'), which helps uncover hidden constraints and informs the Definition of Done.","User Stories, Acceptance Criteria, Definition of Done"
"Text Summarization","Structuring","Condenses long requirement documents, user interviews, or stakeholder feedback from the Sprint Review into concise summaries for quick review by the Product Owner.","Product Backlog, Sprint Review"
"Topic Modeling","Structuring","Groups large volumes of user feedback or backlog items into logical themes (e.g., 'UI improvements', 'Performance issues'), helping to prioritize and structure the backlog for release planning.","Product Backlog, Product Roadmap"
"Duplicate Detection","Structuring","Uses semantic similarity to identify and flag duplicate or highly similar user stories within the Product Backlog, reducing redundancy and wasted effort.","Product Backlog, Backlog Refinement"
"User Story Generation","Structuring","Automatically drafts user stories from unstructured requests by extracting entities and actions and fitting them into a standard 'As a..., I want..., so that...' template.","Product Backlog, Backlog Refinement"
"Ambiguity Detection","Evaluation","Scans user stories and acceptance criteria for vague or ambiguous terms (e.g., 'fast', 'easy', 'user-friendly', 'etc.') that need clarification before development can begin.","User Stories, Acceptance Criteria, Backlog Refinement, Sprint Planning"
"Quality Analysis (INVEST)","Evaluation","Assesses user stories against quality criteria. For example, it can flag stories with multiple verbs as not being 'Small', or check for measurable outcomes to ensure they are 'Testable'.","User Stories, Acceptance Criteria, Definition of Done, Backlog Refinement"
"Complexity Estimation (Proxy)","Evaluation","Analyzes linguistic complexity, sentence structure, and the number of functional components in a requirement as a proxy for development complexity, helping to flag items that may need to be broken down.","User Stories, Backlog Refinement, Sprint Planning"
"Acceptance Criteria Generation","Structuring","Suggests potential acceptance criteria by parsing the user story's description and identifying key actions, outcomes, and conditions that must be met.","User Stories, Acceptance Criteria"
"Sentiment Analysis","Extraction","Gauges the sentiment (positive, negative, neutral) of user feedback from app reviews or support tickets, helping the Product Owner prioritize pain points.","Product Backlog, Sprint Review"