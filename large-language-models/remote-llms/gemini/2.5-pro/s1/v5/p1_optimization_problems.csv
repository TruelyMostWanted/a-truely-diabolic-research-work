Rank,Name,Abbreviation,Description,Solvability,Example,Appearances
10,"Linear Programming","LP","Optimizing a linear objective function subject to linear equality and inequality constraints. Decision variables are continuous and non-negative.",Very Efficiently Solvable (Global optimum guaranteed with methods like Simplex or Interior-Point).,"Resource allocation in a factory, portfolio optimization for highest return with linear models.",10
9,"Mixed-Integer Linear Programming","MILP / MIP","An LP where some or all of the decision variables are restricted to be integers. This allows for modeling discrete choices (e.g. yes/no decisions).",NP-hard (Computationally difficult). Finding a guaranteed optimal solution can be very slow as problem size grows. Solved with Branch and Bound algorithms.,"Facility location (which warehouses to open), production scheduling with on/off states, Sudoku.",9
8,"Non-linear Programming","NLP","An optimization problem where either the objective function or at least one of the constraints is a non-linear function of the decision variables.",Varies Greatly. If convex a global optimum can be found. For non-convex problems finding a global optimum is extremely difficult; algorithms typically find local optima.,"Engineering design (e.g. shape optimization), training neural networks, portfolio optimization including variance (risk).",8
7,"Quadratic Programming","QP","A special type of NLP with a quadratic objective function and linear constraints. It is a bridge between the efficiency of LP and the generality of NLP.",Efficiently Solvable (if the objective is convex). Harder than LP but much easier than general NLP.,"Support Vector Machines (SVM) in machine learning, some portfolio risk models, optimal control problems.",7
6,"Dynamic Programming","DP","A method for solving complex problems by breaking them down into a collection of simpler overlapping subproblems solved sequentially.",Efficiency depends on the size of the state space. It can be very efficient if the number of subproblems is manageable.,"Shortest path problems in a graph (e.g. Bellman-Ford), inventory management, sequence alignment in bioinformatics.",6
5,"Stochastic Programming","SP","Models optimization problems where some of the data is uncertain and represented as a probability distribution. Decisions are made to be robust against this uncertainty.",Computationally Intensive. Often requires significant computational resources and advanced decomposition techniques.,"Supply chain design under uncertain demand, energy generation planning with random renewable inputs, financial planning.",5
4,"Multi-objective Optimization","MOP","Involves optimizing more than one objective function simultaneously. The objectives are often conflicting leading to a trade-off.",No single optimal solution. The solution is a set of Pareto optimal points where one objective cannot be improved without worsening another.,"Product design (e.g. balancing cost vs. performance), investment (balancing risk vs. return), environmental policy.",4
3,"Combinatorial Optimization","-","Concerned with finding an optimal object from a finite set of objects. Problems are often related to graphs permutations and sets. Heavily overlaps with ILP.",Often NP-hard. Many of the most famous computationally hard problems fall into this category.,"Traveling Salesperson Problem (TSP), Vehicle Routing Problem (VRP), minimum spanning tree.",3
2,"Heuristic / Metaheuristic Optimization","-","Involves using approximation algorithms to find 'good enough' solutions for extremely hard optimization problems where exact methods are too slow.",Does Not Guarantee Optimality. The goal is to find a high-quality solution in a reasonable amount of time. Methods include Genetic Algorithms and Simulated Annealing.,"Complex scheduling for large airlines, protein folding, solving the Traveling Salesperson Problem for thousands of cities.",2
1,"Calculus of Variations","-","Finds a function or a curve that minimizes or maximizes a given functional (an integral of a function). It is optimization in an infinite-dimensional space.",Requires Advanced Mathematics. Solved using tools like the Euler-Lagrange equation from calculus.,"Finding the shortest path on a curved surface (geodesic), finding the shape of a hanging chain (catenary), principle of least action in physics.",1