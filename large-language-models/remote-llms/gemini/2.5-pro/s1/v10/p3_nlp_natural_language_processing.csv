Keyword,Category,Description,RelevantScrumEntities
"Requirement Clustering","Inception & Extraction","Using topic modeling or embedding-based clustering to automatically group unstructured feedback (from emails, support tickets, etc.) into common themes. This helps the Product Owner identify significant areas of need before writing formal requirements.","Product Backlog, Product Owner"
"User Story Extraction","Inception & Extraction","Applying Named Entity Recognition (NER) and pattern matching to unstructured text (like meeting transcripts) to automatically identify and draft potential Product Backlog Items in the ""As a..., I want..., so that..."" format.","Product Backlog, Product Owner"
"Requirement Parsing","Structuring & Refinement","Deconstructing a user story into its semantic components (Actor, Action, Benefit). This helps validate the story's structure and can be used as a feature for other analysis tasks.","Product Backlog Item (PBI), Definition of Ready"
"Duplicate Detection","Structuring & Refinement","Employing semantic similarity models to analyze the Product Backlog and identify duplicate or highly overlapping requirements. This helps maintain a clean and concise backlog (DEEP criteria).","Product Backlog, Backlog Refinement"
"Dependency Identification","Structuring & Refinement","Scanning the text of multiple Product Backlog Items to find shared terms, system components, or APIs, thereby automatically suggesting potential technical or functional dependencies between them.","Product Backlog, Sprint Planning"
"Acceptance Criteria Generation","Structuring & Refinement","Leveraging Large Language Models (LLMs) to suggest a preliminary set of acceptance criteria based on the content of a user story, which the team can then refine during Backlog Refinement.","Product Backlog Item (PBI), Definition of Done, Backlog Refinement"
"Ambiguity Detection","Quality & Complexity Analysis","Analyzing requirement text to flag vague, subjective, or non-quantifiable terms (e.g., 'fast', 'better', 'user-friendly'). This promotes the creation of more specific and testable criteria (INVEST criteria).","Product Backlog Item (PBI), Backlog Refinement, Sprint Planning"
"Completeness Check","Quality & Complexity Analysis","Automatically verifying that a requirement conforms to a predefined structure, such as ensuring a user story contains a role, a goal, and a motivation, which supports the team's 'Definition of Ready'.","Product Backlog Item (PBI), Definition of Ready"
"Complexity Estimation","Quality & Complexity Analysis","Predicting the relative complexity or effort (as a proxy for story points) by analyzing linguistic features of the requirement text, such as length, verb count, technical term density, and semantic similarity to previously estimated items.","Product Backlog Item (PBI), Backlog Refinement, Sprint Planning"