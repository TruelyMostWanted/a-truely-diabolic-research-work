ID, Name, Description, AffectedEntities, Influence
1,Unrealistic Sprint Commitments,The team is pressured into committing to more work than they believe they can complete in a sprint, often due to external stakeholder demands.,Development Team, Scrum Master,10
2,Constantly Changing Priorities (Scope Creep),The Product Owner or stakeholders introduce significant new requirements or change priorities during a sprint, invalidating current work and plans.,Development Team, Product Owner,9
3,Lack of Psychological Safety,Team members fear speaking up about mistakes, challenges, or needing help due to a blame culture, leading to hidden problems and anxiety.,Development Team, Scrum Master,9
4,Vague or Shifting Requirements,User Stories with unclear Acceptance Criteria or a Definition of Done that is constantly reinterpreted, leading to rework and frustration.,Development Team,10
5,Technical Debt & Legacy Code,Being forced to work with poorly documented, brittle, or complex code that slows down development and increases the risk of introducing bugs.,Development Team,9
6,Micro-Management,The SCRUM Master or management excessively monitors and controls the daily work of developers, undermining autonomy and trust.,Development Team,8
7,Ineffective Daily SCRUMs,Stand-up meetings that turn into problem-solving sessions, status reports for managers, or aren't time-boxed, wasting time and causing fatigue.,Development Team, Scrum Master,7
8,Continuous Context Switching,Interruptions from support queries, meetings outside the core ceremonies, or being assigned to multiple teams prevent deep, focused work.,Development Team,8
9,Lack of Tooling or Environment Issues,Poorly functioning development, testing, or CI/CD environments that slow down progress and create constant, frustrating blockers.,Development Team,7
10,Uncertainty About Product Vision,The team does not understand the "why" behind their work, making tasks feel meaningless and reducing motivation.,Development Team, Product Owner,6
11,Unbalanced Team Skillset,A team lacking critical skills (e.g., no DevOps or UX expertise) creates bottlenecks and pressure on specific individuals.,Development Team, Scrum Master,7
12,Ineffective Retrospectives,Meetings that result in no actionable improvements, making the team feel their feedback is ignored and problems are perpetual.,Development Team, Scrum Master,6
13,Pressure from "Velocity" Tracking,Using velocity as a performance metric for individuals or to compare teams, rather than a planning tool for the team itself.,Development Team,5
14,Unmanaged Dependencies,Waiting on other teams, third-party services, or external approvals that are outside the team's control, creating delays and idle time.,Development Team, Scrum Master,8
15,Insufficient "Definition of Done",A weak or undefined DoD leads to quality compromises, last-minute chaos before a review, and technical debt.,Development Team,7