ID,Name,Description,AffectedEntities,Influence
1,Unrealistic Sprint Commitments,The team is pressured into committing to more work than they can realistically complete within a sprint, often due to external deadlines or stakeholder pressure.,Developers, Scrum Master,10
2,Constantly Changing Priorities (Scope Creep),The Product Owner or stakeholders introduce significant new requirements or change priorities mid-sprint, invalidating current work and creating churn.,Developers, Product Owner,9
3,Lack of Psychological Safety,Team members fear speaking up about problems, asking questions, or admitting mistakes due to a blame-oriented culture.,All Team Members,9
4,Vague or Unrefined Backlog Items,User stories that lack clear acceptance criteria or are too large ("epics"). This leads to confusion, rework, and blocked progress during the sprint.,Developers, Product Owner,8
5,Continuous Context Switching,Being pulled into unplanned work, production incidents, or multiple projects simultaneously, preventing deep focus on sprint goals.,Developers,7
6,Micro-Management & Lack of Autonomy,The team is not trusted to self-manage their work. Developers are told how to implement solutions rather than being given a problem to solve.,Developers, Scrum Master,8
7,Ineffective Daily Scrums,The Daily Standup becomes a status report for management rather than a planning meeting for the team, creating pressure and diminishing its value.,Developers, Scrum Master,7
8,Technical Debt & Legacy Code,Working in a codebase with high technical debt makes every change riskier, slower, and more frustrating, leading to "walking on eggshells" stress.,Developers,8
9,Unclear Definition of "Done",A ambiguous or lax Definition of Done leads to last-minute chaos, testing bottlenecks, and the stressful "discovery" of unfinished work at the sprint's end.,Developers, QA,7
10,Lack of Psychological Safety,Team members fear speaking up about problems, asking questions, or admitting mistakes due to a blame-oriented culture.,All Team Members,9
11,Unsupportive Environment / Lack of Tools,Being hindered by slow infrastructure, inefficient tools, bureaucratic processes, or environments that are hard to set up and use.,Developers,6
12,Persistent Overload & Sustained High Velocity,Consistently working at maximum capacity sprint-after-sprint without a break, leading to exhaustion and burnout.,Developers,8
13,Uncertain Job Security / Company Instability,General anxiety about layoffs, company acquisition, or project cancellation that looms over the daily work.,All Team Members,9
14,Ineffective Retrospectives,Retrospectives that do not lead to actionable improvements, making the team feel their problems are heard but never solved, leading to cynicism and frustration.,All Team Members,7
15,Unplanned Work & Production Issues,Being frequently interrupted to fight fires or address critical bugs that were not accounted for in sprint planning.,Developers,7