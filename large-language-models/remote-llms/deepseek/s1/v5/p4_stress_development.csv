ID, Name, Description, AffectedEntities, Influence
1, Unclear or Volatile Requirements, Constantly changing or poorly defined user stories/acceptance criteria lead to rework, confusion, and an inability to plan effectively., Developers, Product Owner, 9
2, Unrealistic Sprint Commitments, Pressure to commit to more work than can be done within a sprint, often due to external stakeholder pressure or misestimation., Developers, Scrum Master, 10
3, Micro-Management, Lack of autonomy where team members are not trusted to self-organize and make technical decisions, stifling creativity and ownership., Developers, 8
4, Context Switching & Interruptions, Frequent interruptions (e.g., urgent requests, unplanned meetings) that break focus and reduce deep work time, harming productivity., Developers, 7
5, Technical Debt & Legacy Code, Pressure from working with brittle, poorly documented, or complex code that slows down development and increases the risk of introducing bugs., Developers, 8
6, Daily Scrum as Status Report, The Daily Standup becomes a reporting session to management rather than a planning session for developers, creating daily performance anxiety., Developers, 6
7, Lack of Psychological Safety, An environment where team members fear speaking up about problems, mistakes, or asking for help, leading to hidden issues and burnout., All Team Members, 9
8, Continuous Deployment Pressure, The constant pressure to integrate, test, and deploy code can be relentless, leaving little time for recovery or deep thought., Developers, 7
9, Vague Definition of "Done", Uncertainty about what constitutes a finished task leads to last-minute surprises, scope creep, and disagreements during the sprint review., Developers, Product Owner, 7
10, Ineffective Retrospectives, Problems are identified in retrospectives but no actionable changes are implemented, leading to frustration and the feeling that issues are perpetual., All Team Members, 6
11, External Stakeholder Pressure, Direct pressure from clients or management outside the core team, bypassing the Product Owner and disrupting the team's workflow., Developers, Product Owner, 8
12, Insufficient Tooling & Environments, Slow builds, flaky tests, and complex deployment processes create friction and waste valuable development time., Developers, 5
13, Unbalanced Workload, Uneven distribution of work within the team, leading to some members being perpetually overloaded while others are under-utilized., Developers, 7
14, Fear of Failure & Blame Culture, A culture that punishes mistakes rather than treating them as learning opportunities, encouraging risk aversion and hiding problems., All Team Members, 9
15, Constant "Firefighting", The team is repeatedly pulled away from sprint goals to address production incidents or critical bugs, derailing planned work., Developers, 8