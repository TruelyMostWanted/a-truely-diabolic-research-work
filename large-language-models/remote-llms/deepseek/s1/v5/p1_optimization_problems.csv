Rank,Name,Abbreviation,Description,Solvability,Example,Appearances
1,Linear Programming,LP,Optimize a linear objective function subject to linear equality and inequality constraints. Decision variables are continuous.,Efficiently solvable (e.g., Simplex, Interior-Point). Optimal solution guaranteed.,Resource allocation, product mix, diet problem.,10
2,Mixed-Integer Linear Programming,MILP,An LP problem where some or all decision variables are restricted to be integers.,NP-Hard in general. Solution time grows exponentially with number of integer variables.,Scheduling, facility location, vehicle routing with discrete choices.,9
3,Non-Linear Programming,NLP,Optimize a non-linear objective function subject to non-linear constraints. Variables are continuous.,Challenging. Often requires iterative algorithms that find local optima, not necessarily global.,Engineering design, parameter estimation, economic forecasting.,8
4,Quadratic Programming,QP,A special case of NLP where the objective function is quadratic and constraints are linear.,Efficiently solvable if the objective is convex (e.g., Portfolio Optimization).,Portfolio optimization, least squares regression, model predictive control.,7
5,Constraint Programming,CP,A programming paradigm for solving combinatorial problems by defining constraints and finding states that satisfy them.,Powerful for feasibility and satisfaction problems. Good for logical constraints.,Scheduling, puzzles (e.g., Sudoku), circuit design.,6
6,Stochastic Programming,SP,Optimization under uncertainty. Parameters are known only by their probability distributions.,Computationally intensive. Often requires generating and solving many scenarios.,Energy planning with uncertain demand, financial modeling.,5
7,Robust Optimization,RO,A framework for optimization under bounded uncertainty. Seeks solutions that are immune to data uncertainty.,Typically reformulated into a deterministic (often larger) problem that can be solved.,Logistics with uncertain travel times, design under uncertainty.,4
8,Dynamic Programming,DP,A method for solving complex problems by breaking them into simpler subproblems, solving each once, and storing their solutions.,Efficient for problems with optimal substructure and overlapping subproblems.,Shortest path problems, inventory management, resource scheduling.,3
9,Multi-Objective Optimization,MOO,Problems with multiple, often conflicting, objective functions to be optimized simultaneously.,No single optimal solution. Yields a set of Pareto-optimal solutions for decision-maker trade-offs.,Product design (cost vs. performance), environmental policy (economic growth vs. pollution).,2
10,Combinatorial Optimization,CO,A field focused on finding an optimal object from a finite set of objects. Often involves integers.,Typically NP-Hard. Requires specialized algorithms (exact or heuristic) for each problem type.,Traveling Salesman Problem (TSP), Knapsack Problem, Graph Coloring.,1