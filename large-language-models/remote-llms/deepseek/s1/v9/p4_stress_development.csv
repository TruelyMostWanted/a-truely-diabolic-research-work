ID,Name,Description,AffectedEntities,Influence
1,Unclear or Constantly Changing Requirements,The Product Backlog contains poorly defined user stories with vague acceptance criteria, or the Product Owner frequently reprioritizes and changes scope mid-sprint.,Development Team, Product Owner,10
2,Unrealistic Sprint Commitments,The team is pressured into committing to an unrealistic amount of work during Sprint Planning, often due to external deadlines, leading to certain failure and crunch.,Development Team, Scrum Master,9
3,Technical Debt & Poor Code Quality,Constantly having to work around a fragile, poorly designed system. This slows down development, increases bug frequency, and makes simple changes riskier.,Development Team,8
4,Context Switching & Interruptions,Frequent interruptions from outside the team, urgent bug fixes, or being assigned to multiple projects simultaneously shatter focus and reduce deep work time.,Development Team,8
5,Lack of Psychological Safety,Team members fear speaking up about problems, asking questions, or admitting mistakes due to a blame culture. This suppresses innovation and hides risks.,Entire Scrum Team,8
6,Micro-Management,Development Team members are not trusted to self-organize and manage their own work. A manager or PO dictates how to perform tasks, stifling autonomy.,Development Team,7
7,Ineffective Daily Scrum,The Daily Stand-up becomes a status report to a manager rather than a planning meeting for the team, creating pressure and diminishing its value.,Development Team, Scrum Master,7
8,Undefined "Definition of Done",A lack of clear, shared standards for what "done" means leads to last-minute surprises, technical debt, and arguments over quality.,Entire Scrum Team,7
9,Uncontrolled Scope Creep ("Sprint Injection"),Stakeholders or management add new requirements to the ongoing sprint without removing an equivalent amount of work, invalidating the team's plan.,Development Team, Product Owner,7
10,Lack of Tools or Environment,Slow hardware, inefficient development environments, cumbersome CI/CD pipelines, and constant tooling issues create daily friction and frustration.,Development Team,6
11,Unproductive Retrospectives,The Sprint Retrospective fails to result in actionable improvements, making the team feel their problems are heard but never addressed, leading to cynicism.,Entire Scrum Team,6
12,Insufficient Feedback Loops,Long waits for feedback from stakeholders or users (e.g., only at the Sprint Review) means the team builds in the wrong direction for longer.,Entire Scrum Team,5
13,Uncertainty About Product Vision,The team does not understand the "why" behind their work, making it feel meaningless and reducing motivation and engagement.,Development Team,5
14,Inconsistent Workload,Periods of intense crunch followed by periods of under-utilization create a rollercoaster of stress and boredom, preventing a sustainable pace.,Development Team,5