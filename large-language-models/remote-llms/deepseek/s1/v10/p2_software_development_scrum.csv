ID, Step, Description, Interval, Result
1, Project Vision, The high-level objective and business goal for the project. Defines the "why" and the target audience., Once at project start., A Project Vision Statement.
2, Stakeholder Identification, Identifying all parties (internal and external) with an interest in the project's outcome., Once at project start., A list of key stakeholders and their influence/interest.
3, Create Epic(s), Large, high-level user stories that capture a major feature or capability, often spanning multiple releases., Once at project start, but can be added to., A prioritized backlog of Epics.
4, Release Planning, High-level planning to map Epics and forecast features into a sequence of potential releases., Once, but revisited as needed., A Release Plan or Roadmap.
5, Form Scrum Team, Assembling the cross-functional team: Product Owner, Scrum Master, and Developers., Once at project start., A functioning team with defined roles.
6, Product Backlog Refinement (Grooming), The ongoing process of breaking down Epics into User Stories, adding details, estimates, and ordering them., Continuous, recurring activity., A refined, prioritized, and estimated Product Backlog.
7, Sprint Planning, A time-boxed event where the team plans the work for the upcoming Sprint., Every Sprint (e.g., every 2 weeks)., A Sprint Goal and a Sprint Backlog (selected Product Backlog items + plan).
8, Daily Scrum, A 15-minute stand-up meeting for the Developers to synchronize activities and create a plan for the next 24 hours., Daily., Improved team coordination and a plan for the day. Identified impediments.
9, Development Work, The core activity of designing, implementing, testing, and integrating code to complete Sprint Backlog items., Daily during Sprint., Incremental development of the product functionality.
10, Continuous Integration (CI), The practice of frequently merging all developers' working copies to a shared mainline (e.g., multiple times a day)., Continuous (multiple times daily)., A consistently integrated codebase, early detection of integration bugs.
11, Continuous Delivery (CD), The practice of automatically preparing code changes for a release to production., Continuous (with every successful CI build)., A codebase that is always in a potentially shippable state.
12, Sprint Review, A meeting held at the end of the Sprint to inspect the Increment and adapt the Product Backlog if needed., Every Sprint., Stakeholder feedback and an adapted Product Backlog.
13, Sprint Retrospective, A meeting for the Scrum Team to inspect its own processes and create a plan for improvements for the next Sprint., Every Sprint., A list of actionable improvements for the next Sprint.
14, Build a Sprint Increment, The sum of all the Product Backlog items completed during a Sprint, integrated with previous Increments., Every Sprint., A Done, usable, and potentially releasable piece of functionality.
15, Release, The decision to deploy the current Increment (or a set of Increments) to production., As decided by the Product Owner (can be every Sprint or less frequent)., The product is in the hands of the end-users.
16, Operational Monitoring, Monitoring the released product in production for performance, errors, and user behavior., Continuous, post-release., Data and insights used to inform future backlog items.
17, Gather Feedback, Collecting quantitative (metrics) and qualitative (user interviews) feedback on the released product., Continuous, post-release., Direct input from users that fuels future Product Backlog Refinement.