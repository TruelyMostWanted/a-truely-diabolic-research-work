ID, Name, Description, AffectedEntities, Influence
1, Unrealistic Sprint Commitments, The team is pressured into committing to more work than they believe they can complete, often due to external stakeholder demands. This creates immediate pressure to deliver the impossible., Development Team, Scrum Master, 10
2, Constantly Changing Priorities (Scope Creep), The Product Owner or stakeholders introduce significant new requirements or change priorities mid-sprint, invalidating current work and causing frustration and rework., Development Team, Product Owner, 9
3, Vague or Poorly Defined Requirements, User Stories that lack clear acceptance criteria or are open to interpretation. This leads to uncertainty, rework, and conflict during the sprint when "Done" is unclear., Development Team, 9
4, Micro-Management & Lack of Autonomy, Team members are not trusted to make technical decisions or manage their own work. This violates the principle of self-managing teams and erodes morale., Development Team, 8
5, Technical Debt & Legacy Code, Being forced to work with a brittle, poorly tested codebase slows down development immensely. Each change carries high risk, creating constant anxiety about breaking existing functionality., Development Team, 8
6, Continuous Context Switching, Frequent interruptions, being assigned to multiple teams, or being pulled into unplanned work prevents deep focus, reduces productivity, and increases mental fatigue., Development Team, 8
7, Fear of Failure & Blame Culture, An environment where mistakes are punished rather than treated as learning opportunities. Team members become risk-averse and hesitant to be transparent about problems., Development Team, Scrum Master, 7
8, Ineffective Daily Scrums, The Daily Scrum becomes a status report for a manager rather than a planning meeting for the team. It creates performance anxiety and feels like a micromanagement tool., Development Team, 7
9, Lack of Psychological Safety, Team members do not feel safe to express ideas, ask questions, or admit mistakes. This stifles innovation and forces problems to be hidden until they become crises., Development Team, Scrum Master, 9
10, Unproductive Retrospectives, Retrospectives that do not lead to actionable improvements or where feedback is ignored. This creates a feeling of futility and that management does not care about team impediments., Development Team, Scrum Master, 7
11, External Interruptions & Unplanned Work, Constant "firefighting," production incidents, or requests from outside the team that pull developers away from their Sprint Goal., Development Team, 7
12, Inadequate Tooling & Environment, Slow builds, flaky tests, cumbersome deployment processes, and inefficient tools. This creates daily friction and "death by a thousand cuts," wasting energy and time., Development Team, 6
13, Unclear Definition of "Done", The team and stakeholders have different interpretations of what it means for a story to be complete. This leads to last-minute surprises and rejected work at the Sprint Review., Development Team, Product Owner, 8
14, Lack of Stakeholder Engagement, Absent or disengaged stakeholders who provide feedback too late (e.g., only at the Sprint Review) or are unavailable to answer questions during the sprint., Development Team, Product Owner, 6
15, Personal Performance Metrics, Using individual metrics (e.g., lines of code, number of commits) to measure performance. This incentivizes counter-productive behavior and destroys team collaboration., Development Team, 8