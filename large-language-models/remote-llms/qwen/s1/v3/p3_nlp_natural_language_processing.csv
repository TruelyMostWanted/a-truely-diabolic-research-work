Keyword,Category,Description,RelevantScrumEntities
Named Entity Recognition (NER),Information Extraction,Identifies key entities such as "user", "system", "database", "API", or "role" from user stories and backlog items,Product Backlog, User Stories, Product Owner
Part-of-Speech Tagging,Syntactic Analysis,Helps parse sentence structure in requirements to identify actions (verbs), subjects, and objects for clarity,Product Backlog Refinement, User Stories
Dependency Parsing,Syntactic Analysis,Analyzes grammatical structure to understand relationships between components in a requirement (e.g., "user logs in via SSO"),User Stories, Acceptance Criteria
Text Classification,Classification,Categorizes user stories into functional types (e.g., authentication, reporting, integration) or non-functional requirements,Product Backlog, Sprint Planning
Sentiment Analysis,Text Analysis,Detects tone or urgency in stakeholder feedback or user stories (e.g., "must have" vs. "nice to have"),Sprint Review, Feedback Incorporation
Semantic Similarity,Text Matching,Measures similarity between user stories to detect duplicates or overlapping functionality,Product Backlog Refinement, Backlog Grooming
Topic Modeling (e.g., LDA),Unsupervised Learning,Discovers hidden themes in large backlogs to group related requirements (e.g., "billing", "notifications"),Product Backlog, Release Planning
Intent Detection,Classification,Determines the goal behind a requirement (e.g., "create", "delete", "notify") to standardize story templates,User Stories, Acceptance Criteria
Complexity Estimation,Prediction Model,Uses NLP features (word count, syntax depth, entity density) to predict story point effort,Product Owner, Sprint Planning
Automated Summarization,Text Generation,Generates concise summaries of long user stories or feedback for quick review,Product Backlog, Sprint Review
Acceptance Criteria Extraction,Information Extraction,Extracts or suggests acceptance criteria from user story text using rule-based or ML models,User Stories, Definition of Done
Requirement Ambiguity Detection,Text Analysis,Flags vague terms (e.g., "fast", "efficient", "user-friendly") that may lead to misinterpretation,Product Backlog Refinement, Daily Scrum
Natural Language to Formal Specification,Transformation,Converts informal user stories into structured formats (e.g., Gherkin: Given/When/Then),Acceptance Criteria, QA Testing
Readability Scoring,Text Analysis,Measures complexity of requirement text (e.g., Flesch-Kincaid) to ensure clarity for all stakeholders,Product Backlog, Stakeholder Communication
Multilingual Translation,Translation,Supports global teams by translating backlog items while preserving technical meaning,Product Backlog, Distributed Teams
Chatbot-Assisted Backlog Entry,Interaction Automation,Allows stakeholders to submit requirements via chat; NLP parses and structures them into backlog items,Product Backlog, Product Owner
Change Impact Analysis,Text Matching,Compares new/updated requirements with existing ones to assess ripple effects on sprints or features,Sprint Planning, Product Backlog
Automated Sprint Report Generation,Text Generation,Generates sprint summaries from stand-up notes, Jira logs, or retrospective inputs,Retrospective, Sprint Review
Anomaly Detection in Requirements,Anomaly Detection,Flags inconsistent, incomplete, or contradictory requirements (e.g., "must be offline" vs. "syncs in real-time"),Product Backlog Refinement, QA
Voice-to-Backlog Processing,Speech Processing,Transcribes and structures spoken requirements from meetings into actionable backlog items,Sprint Planning, Product Backlog Creation