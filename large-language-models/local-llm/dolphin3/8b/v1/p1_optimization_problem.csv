import pandas as pd

data = {
    "Rank": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],
    "Type/Name": ["Linear Programming", "Integer Programming", "Quadratic Programming", "Mixed Integer Programming", "Nonlinear Programming", "Stochastic Programming", "Dynamic Programming", "Combinatorial Optimization", "Approximation Algorithms", "Metaheuristics"],
    "Abbreviation": ["LP", "IP", "QP", "MIP", "NLP", "SP", "DP", "CO", "AA", "MH"],
    "Description": [
        "Finding the best outcome in a mathematical model, where resources are limited.",
        "Similar to linear programming but with the additional constraint that some variables must be integers.",
        "Optimization problems where the objective function is quadratic.",
        "A type of optimization problem where some variables are continuous and others are integers.",
        "Optimization problems where the objective function is nonlinear.",
        "Optimization problems with random variables and uncertainty in the parameters.",
        "Optimization problems that can be broken down into simpler subproblems.",
        "Optimization problems where the solution is a combination of discrete elements.",
        "Heuristic algorithms used when exact solutions are computationally infeasible.",
        "High-level procedures that aim to find approximate solutions for optimization problems."
    ],
    "Solvability": ["Solvable", "Solvable", "Solvable", "Solvable", "Solvable", "Solvable", "Solvable", "Solvable", "Partially Solvable", "Partially Solvable"],
    "Example": [
        "Maximize profit = 3x + 4y; subject to constraints x ≤ 10, y ≤ 20, x + y ≤ 15",
        "Maximize profit = 3x + 4y; subject to constraints x ≤ 10, y ≤ 20, x + y ≤ 15, x, y integer",
        "Minimize f(x) = (x-2)^2 + (y+1)^2; subject to constraints x^2 + y^2 ≤ 1",
        "Maximize profit = 3x + 4y; subject to constraints x ≤ 10, y ≤ 20, x + y ≤ 15, z integer",
        "Minimize f(x) = (x-2)^2 + (y+1)^2; subject to constraints x^2 + y^2 ≤ 1",
        "Minimize expected cost = E[3x + 4y]; subject to constraints x ≤ 10, y ≤ 20, x + y ≤ 15",
        "Minimize the total cost of cutting a rod of length n; subject to constraints different lengths available",
        "Traveling Salesman Problem: Find the shortest path that visits all cities and returns to origin city",
        "Set cover problem: Cover all elements using the minimum number of sets; subject to constraints each set contains at least one element"
    ],
    "Appearances": [10, 8, 6, 5, 4, 3, 2, 1, 1, 1]
}

df = pd.DataFrame(data)

df.to_csv("optimization_problems.csv", index=False)