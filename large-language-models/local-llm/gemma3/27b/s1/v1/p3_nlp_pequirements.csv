Keyword,Category,Description,RelevantScrumEntities
"User Story",Requirement Extraction,"Identifying phrases that resemble user stories (e.g., 'As a [role], I want [goal] so that [benefit]'). Uses Named Entity Recognition (NER) and dependency parsing.",Product Backlog, Sprint Planning, User Story Mapping
"Functional Requirement",Requirement Extraction,"Identifying statements describing *what* the system should do. Techniques include keyword spotting, semantic analysis, and topic modeling.",Product Backlog, Sprint Planning, Definition of Done
"Non-Functional Requirement",Requirement Extraction,"Identifying statements describing *how* the system should perform (e.g., performance, security, usability). Often requires identifying adjectives and adverbs.",Product Backlog, Definition of Done, Technical Debt
"Acceptance Criteria",Requirement Structuring,"Extracting and structuring the conditions that must be met for a user story or requirement to be considered complete.  Uses rule-based extraction and pattern matching.",User Stories, Definition of Done, Sprint Review
"Dependency",Relationship Extraction,"Identifying dependencies between requirements or user stories.  Uses dependency parsing and relationship extraction techniques.",Product Backlog, Sprint Planning, Impediment Tracking
"Priority",Requirement Evaluation,"Determining the priority of requirements based on keywords (e.g., 'must have', 'should have', 'nice to have') or sentiment analysis.",Product Backlog, Sprint Planning, Release Planning
"Complexity",Requirement Evaluation,"Assessing the complexity of requirements based on sentence length, number of dependencies, and technical jargon. Uses Natural Language Understanding (NLU).",Product Backlog, Sprint Planning, Story Point Estimation
"Ambiguity",Requirement Evaluation,"Identifying ambiguous or vague statements that require clarification. Uses semantic similarity analysis.",Product Backlog, Refinement, Clarification
"Technical Debt",Requirement Evaluation,"Identifying statements implying future work or compromises made for speed. Sentiment analysis and keyword spotting.",Product Backlog, Technical Debt, Impediment Tracking
"Sentiment",Requirement Evaluation,"Analyzing the sentiment expressed in requirements to identify potential issues or risks. Uses sentiment analysis.",Product Backlog, Risk Management, Impediment Tracking
"Named Entities",Requirement Extraction,"Extracting key concepts like users, features, data, and systems using Named Entity Recognition (NER).",Product Backlog, User Story Mapping, System Design
"Key Phrases",Requirement Extraction,"Identifying important phrases and keywords that describe the core functionality. Uses keyword extraction and TF-IDF.",Product Backlog, User Story Mapping, System Design
"Requirement Type",Requirement Structuring,"Classifying requirements into categories (e.g., functional, non-functional, security). Uses text classification techniques.",Product Backlog, Requirement Management, System Design
"Requirement Status",Requirement Structuring,"Tracking the status of requirements (e.g., proposed, approved, implemented, tested). Uses text classification.",Product Backlog, Requirement Management, Sprint Backlog
"Story Points",Requirement Evaluation,"Estimating the effort required to implement a requirement. Using NLP to analyze the complexity of language within the requirement description.",Sprint Planning, Velocity Calculation
"Definition of Done Keywords",Requirement Structuring,"Identifying keywords within the requirement description that signify whether it meets the 'Definition of Done' (e.g., 'tested', 'documented', 'approved').",Definition of Done, Sprint Review