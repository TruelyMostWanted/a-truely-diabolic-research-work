Keyword, Category, Description, RelevantScrumEntities
#NLP|#SCRUM|#UserStories|#BacklogGrooming|#Extraction|#RequirementsAnalysis|Extracts|Identifies|Categorizes|Clusters|Topics|Sentiment|#ProductBacklog|#Planning|#SprintBacklog|#Refinement|#IdeaConversion|#NaturalLanguageProcessing|#TextMining|#EntityRecognition|#IntentDetection|#ComplexityMetrics|#Estimation|#INVESTCheck|#Traceability|#RequirementClarity
#NLP|#SCRUM|#Epics|#UserStoryBreakdown|#InformationExtraction|#NamedEntityRecognition|Identifies functional areas, user personas, goals, benefits from text|#ProductBacklog|#Epics|#Refinement|#SprintPlanning|#BacklogGrooming|#TechnicalSpecifications|#UseCases|#FeatureRequests
#NLP|#SCRUM|#Complexity|#Estimation|#EffortPrediction|#CodeComprehension|#SystemRequirements|#RequirementAnalysis|#DocumentationParsing|Analyzes document complexity based on length, technical terms, integration points mentioned|#ProductBacklog|#SprintPlanning|#ReleasePlanning|#Burndown/Bump Charts|#TeamCapacity
#NLP|#SCR.compliance|#UserStoryFormat|#AcceptanceCriteria|#DefinitionofDone|#TextNormalization|#Standardization|#RequirementClarity|#Consistency|Automates formatting to "As a..., I want..., so that..." structure and suggests acceptance criteria keywords|#ProductBacklog|#SprintBacklog|#DefinitionofDone|#Planning|#Refinement
#NLP|#SCRUM|#Traceability|#SystemRequirements|#UserStories|#Code|#ReleaseNotes|#Documentation|#DefectTracking|Links textual requirements to source documents, code commits (if possible via context), defects|#ProductBacklog|#SprintBacklog|#ReleasePlan|#Retrospectives|#ReleaseNotes|#TechnicalDesign
#NLP|#SCRUM|#Ambiguity|#Clarity|#RequirementHorizon|#Estimability|#Negotiability|#Planning|#UserStories|#DefinitionofDone|Detects vague, ambiguous language or overly broad scope in requirements text|#ProductBacklog|#SprintPlanning|#DefinitionofDone|#Refinement|#Retrospectives
#NLP|#SCRUM|#Sentiment|#Mood|#RequirementHorizon|#Estimability|#PreliminaryAssessment|#Prioritization|#ProductOwner|#ReleasePlan|Classifies requirement sentiment (e.g., urgent, complex) based on word choice and complexity metrics|#ProductBacklog|#ReleasePlanning|#SprintPrioritization|#ProductOwnerInput
#NLP|#SCRUM|#DomainSpecificLanguage|#JIRA|#AgileTools|#CustomFieldMapping|#RequirementType|#AcceptanceCriteria|#Traceability|Identifies specific domain jargon or SCRUM tool-specific keywords (e.g., "acceptance criteria:", "priority:", "epic:")|#ProductBacklog|#SprintBacklog|#DefinitionofDone|#IssueTracking|#ToolConfiguration