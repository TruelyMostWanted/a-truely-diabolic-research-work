Keyword,Category,Description,RelevantScrumEntities
Keyword Extraction,Extraction,Identifies key terms (e.g., "login", "user", "payment") from unstructured text to define functional/non-functional requirements,Product Backlog, User Stories
Sentiment Analysis,Evaluation,Analyzes stakeholder feedback (e.g., sprint reviews) to prioritize requirements based on perceived urgency or satisfaction,Sprint Review, Product Backlog
Dependency Mapping,Categorization,Identifies relationships between requirements (e.g., "User authentication is required before payment processing"),Epic, User Story, Sprint Backlog
Ambiguity Detection,Evaluation,Flags vague or underspecified requirements (e.g., "should be fast") for refinement,Product Backlog Refinement
Topic Clustering,Categorization,Groups similar requirements into thematic categories (e.g., "Authentication", "Billing"),Epic, User Story
Complexity Scoring,Evaluation,Ranks requirements by technical complexity (e.g., based on technical terms, dependencies, or ambiguity),Sprint Planning, Product Backlog
Traceability Matrix,Structure,Links requirements to test cases, code, or documentation for end-to-end traceability,Product Backlog, Sprint Backlog, Testing
Stakeholder Intent Recognition,Extraction,Determines stakeholder priorities from interviews or feedback (e.g., "security is critical"),Product Vision, Product Backlog
Requirement Prioritization,Evaluation,Uses NLP to automate MoSCoW or Kano prioritization based on stakeholder language,Sprint Planning, Product Owner
Code-Requirement Mapping,Structure,Matches natural language requirements to code artifacts (e.g., via code comments or documentation),Sprint Backlog, Testing
Ambiguity Resolution,Evaluation,Generates clarifying questions for ambiguous requirements (e.g., "What defines 'fast'?"),Product Backlog Refinement
Requirement Completeness Check,Evaluation,Identifies missing requirements (e.g., "No mention of error handling") in user stories,Sprint Planning, User Story
Version Control Analysis,Structure,Analyzes requirement changes in repositories (e.g., GitHub) to detect scope creep,Product Backlog, Sprint Backlog
User Story Generation,Extraction,Automates conversion of stakeholder feedback into structured user stories (e.g., "As a user..."),Product Backlog, User Story
Risk Analysis,Evaluation,Flags high-risk requirements (e.g., "unproven third-party integration") based on language patterns,Sprint Planning, Product Owner