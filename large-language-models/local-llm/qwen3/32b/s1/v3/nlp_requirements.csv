Keyword,Category,Description,RelevantScrumEntities
Entity Recognition,Extraction,NLP identifies key entities (e.g., user roles, actions, system components) from natural language requirements in user stories or acceptance criteria.,Product Backlog Items, User Stories, Product Owner
Sentiment Analysis,Evaluation,NLP analyzes stakeholder feedback or user story phrasing to detect ambiguity, urgency, or risk, aiding prioritization.,Product Backlog, Sprint Backlog, Product Owner
Dependency Analysis,Structuring,NLP maps relationships between requirements (e.g., "this feature depends on X") to structure interdependencies in the backlog.,Product Backlog, Sprint Planning, Scrum Master
Ambiguity Detection,Evaluation,NLP identifies vague or unclear language in requirements (e.g., "user-friendly" without metrics) to flag for refinement.,Product Backlog, Refinement, Product Owner
Complexity Scoring,Evaluation,NLP evaluates technical complexity by analyzing language patterns (e.g., nested conditions, technical jargon) to estimate effort.,Sprint Planning, Velocity, Development Team
Version Control,Structuring,NLP tracks changes in requirement wording over time to maintain traceability and avoid scope creep.,Product Backlog, Sprint Backlog, Scrum Master
Traceability,Structuring,NLP links user stories to acceptance criteria, technical specifications, or test cases for end-to-end validation.,Product Backlog, Sprint Backlog, Quality Assurance
Prioritization,Structuring,NLP ranks requirements based on stakeholder language (e.g., "critical," "must-have") to align with Product Owner priorities.,Product Backlog, Sprint Planning, Product Owner
Semantic Clustering,Structuring,NLP groups similar requirements (e.g., user stories with overlapping goals) to improve backlog organization.,Product Backlog, Sprint Planning, Scrum Master
Acceptance Criteria Extraction,Extraction,NLP automates the extraction of acceptance criteria from user stories to ensure clarity and testability.,User Stories, Sprint Backlog, Development Team