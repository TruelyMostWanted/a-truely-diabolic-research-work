Keyword,Category,Description,RelevantScrumEntities
KeywordExtraction,RequirementExtraction,"Extract key terms (e.g., features, constraints) from user stories or stakeholder inputs to identify core requirements.","User Stories, Product Backlog Items"
RequirementClassification,Structuring,"Categorize requirements into functional/non-functional, business/technical, or priority tiers using NLP classification models.","Product Backlog, Product Owner"
ComplexityAnalysis,Evaluation,"Analyze language complexity (e.g., ambiguity, technical jargon) in user stories to estimate effort and risk for Sprint Planning.","Sprint Planning, Development Team"
SentimentAnalysis,Prioritization,"Use sentiment analysis on stakeholder feedback to prioritize high-impact or high-risk requirements in the Product Backlog.","Product Owner, Stakeholders"
TraceabilityMapping,Structuring,"Automate cross-document traceability of requirements using NLP to link user stories, technical specs, and test cases.","Product Backlog, Sprint Backlog"
AmbiguityDetection,Evaluation,"Identify ambiguous or vague language in requirements (e.g., undefined terms, unclear boundaries) to flag for refinement.","Product Owner, Scrum Master"
TestCaseGeneration,Testing,"Generate test cases from user stories using NLP-driven parsing (e.g., Gherkin syntax or scenario-based logic).","Sprint Backlog, Development Team"
RequirementSummarization,Documentation,"Create concise summaries of requirements (e.g., sprint goals, acceptance criteria) using NLP-based summarization techniques.","Sprint Planning, Product Backlog"
StakeholderFeedbackAnalysis,Prioritization,"Analyze unstructured stakeholder feedback (e.g., emails, meetings) to extract actionable requirements and update the Product Backlog.","Product Owner, Stakeholders"
ChangeImpactAnalysis,Evaluation,"Assess the impact of requirement changes using NLP to trace dependencies between user stories, technical specs, and code.","Sprint Planning, Development Team"